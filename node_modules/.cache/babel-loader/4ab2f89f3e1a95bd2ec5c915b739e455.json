{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J\\\\newProjects\\\\Recollection\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\" \", currentId ? 'Editing' : 'Creating', \" A Memory \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: event => setPostData({ ...postData,\n          creator: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: event => setPostData({ ...postData,\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: event => setPostData({ ...postData,\n          message: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: event => setPostData({ ...postData,\n          tags: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttonSubmit.fileInput,\n        children: [/*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"  Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: clear,\n          fullWidth: true,\n          children: \"  Clear Form  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"ZamKPGhQPKQbKhnzStB+VA9D7R8=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/J/newProjects/Recollection/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","event","target","value","buttonSubmit","fileInput","base64"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core' \r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useStyles from './styles'\r\nimport {createPost, updatePost} from '../../actions/posts'\r\n\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId}) => {\r\n    const [postData, setPostData] = useState({\r\n        creator: \"\", title:\"\", message:\"\", tags:\"\", selectedFile:\"\"\r\n    }) \r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null)\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n            if(post) setPostData(post)\r\n        }, [post])\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(currentId){\r\n            dispatch(updatePost(currentId, postData))\r\n        }else {\r\n            dispatch(createPost(postData))\r\n        }\r\n\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(null)\r\n        setPostData()\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}` } onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\"> {currentId ? 'Editing' : 'Creating'} A Memory </Typography>\r\n                <TextField name=\"creator\" variant=\"outlined\" label=\"creator\" fullWidth value={postData.creator} onChange={(event) => setPostData({ ...postData, creator: event.target.value})}/>\r\n                <TextField name=\"title\" variant=\"outlined\" label=\"title\" fullWidth value={postData.title} onChange={(event) => setPostData({ ...postData, title: event.target.value})}/>\r\n                <TextField name=\"message\" variant=\"outlined\" label=\"message\" fullWidth value={postData.message} onChange={(event) => setPostData({ ...postData, message: event.target.value})}/>\r\n                <TextField name=\"tags\" variant=\"outlined\" label=\"tags\" fullWidth value={postData.tags} onChange={(event) => setPostData({ ...postData, tags: event.target.value})}/>\r\n                <div className={classes.buttonSubmit.fileInput}> \r\n                    <FileBase\r\n                        type=\"file\"\r\n                        multiple={false}\r\n                        onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}\r\n                />\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color='primary' size='large' type='submit' fullWidth>  Submit </Button>\r\n                <Button variant=\"contained\" color='secondary' size='small' onClick={clear} fullWidth>  Clear Form  </Button>\r\n                </div>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form"]},"metadata":{},"sourceType":"module"}